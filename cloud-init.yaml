#cloud-config
package_update: true
package_upgrade: true

packages:
  - mariadb-server
  - mariadb-client
  - galera-4
  - rsync
  - jq
  - netcat
  - supervisor
  - ufw
  - locales

write_files:
  - content: |
      #!/bin/bash
      set -e

      exec 1> >(tee -a /var/log/galera-setup.log)
      exec 2>&1

      echo "Starting Galera setup at $(date)"

      # Create temporary non-galera config for initialization
      cat > /etc/mysql/mariadb.conf.d/60-galera.cnf << INNEREOF
      [mysqld]
      bind-address = 0.0.0.0
      max_connections = 1000
      innodb_buffer_pool_size = 128M
      innodb_log_file_size = 48M
      innodb_file_per_table = 1
      binlog_format = ROW
      # Temporarily disable Galera for initialization
      wsrep_on = OFF
      INNEREOF

      # Setup volume
      VOLUME_PATH="/dev/disk/by-id/scsi-0HC_Volume_${volume_id}"
      MOUNT_POINT="/mnt/${node_name}-volume"
      mkdir -p "$MOUNT_POINT"

      echo "Waiting for volume at $VOLUME_PATH..."
      for i in {1..60}; do
        if [ -L "$VOLUME_PATH" ]; then
          break
        fi
        sleep 2
      done

      if [ ! -L "$VOLUME_PATH" ]; then
        echo "Volume not found after waiting"
        exit 1
      fi

      # Mount volume
      if ! mount | grep -q "$MOUNT_POINT"; then
        if ! blkid "$VOLUME_PATH" | grep -q "ext4"; then
          mkfs.ext4 -F "$VOLUME_PATH"
        fi
        mount -o discard,defaults "$VOLUME_PATH" "$MOUNT_POINT"
        echo "$VOLUME_PATH $MOUNT_POINT ext4 discard,defaults,nofail 0 0" >> /etc/fstab
      fi

      # Setup MySQL directories
      rm -rf /var/lib/mysql
      ln -s "$MOUNT_POINT" /var/lib/mysql
      mkdir -p /var/log/mysql /var/run/mysqld
      chown -R mysql:mysql "$MOUNT_POINT" /var/log/mysql /var/run/mysqld
      chown -h mysql:mysql /var/lib/mysql
      chmod 755 /var/run/mysqld

      # Initialize MySQL with Galera disabled
      echo "Initializing MySQL data directory..."
      mysql_install_db --user=mysql --datadir="$MOUNT_POINT"

      # Configure firewall
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow 22/tcp
      ufw allow 3306/tcp
      ufw allow 4444/tcp
      ufw allow 4567/tcp
      ufw allow 4568/tcp
      ufw allow 4567/udp
      ufw allow from 10.1.0.0/24 to any
      ufw --force enable

      # Now configure for Galera
      if [ "${bootstrap}" = "true" ]; then
        echo "Configuring as bootstrap node..."
        cat > /etc/mysql/mariadb.conf.d/60-galera.cnf << INNEREOF
      [mysqld]
      bind-address = 0.0.0.0
      max_connections = 1000
      innodb_buffer_pool_size = 128M
      innodb_log_file_size = 48M
      innodb_file_per_table = 1
      binlog_format = ROW

      wsrep_on = ON
      wsrep_provider = /usr/lib/galera/libgalera_smm.so
      wsrep_cluster_name = galera_cluster
      wsrep_cluster_address = gcomm://
      wsrep_node_name = ${node_name}
      wsrep_node_address = ${node_ip}
      wsrep_sst_method = rsync
      wsrep_provider_options = "pc.recovery=FALSE;gcache.size=128M"
      INNEREOF

        echo "Starting Galera bootstrap..."
        galera_new_cluster
      else
        echo "Configuring as cluster node..."
        cat > /etc/mysql/mariadb.conf.d/60-galera.cnf << INNEREOF
      [mysqld]
      bind-address = 0.0.0.0
      max_connections = 1000
      innodb_buffer_pool_size = 128M
      innodb_log_file_size = 48M
      innodb_file_per_table = 1
      binlog_format = ROW

      wsrep_on = ON
      wsrep_provider = /usr/lib/galera/libgalera_smm.so
      wsrep_cluster_name = galera_cluster
      wsrep_cluster_address = gcomm://${cluster_ips}
      wsrep_node_name = ${node_name}
      wsrep_node_address = ${node_ip}
      wsrep_sst_method = rsync
      wsrep_provider_options = "pc.recovery=FALSE;gcache.size=128M"
      INNEREOF

        echo "Starting MariaDB..."
        systemctl start mysql
      fi

      echo "Setup completed at $(date)"
    path: /usr/local/bin/setup-galera.sh
    permissions: '0755'

runcmd:
  # Stop any existing services
  - systemctl stop mysql || true
  - systemctl disable mysql || true
  - systemctl stop supervisor || true
  - systemctl disable supervisor || true
  # Update and install packages
  - DEBIAN_FRONTEND=noninteractive apt-get update
  - DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server mariadb-client galera-4
  # Run setup
  - bash /usr/local/bin/setup-galera.sh